#pragma checksum "C:\Users\liute\Source\Repos\Minedrink\UWPShopManagement\UWPShopManagement\Views\V_ArduinoManagement_C.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "7C999668A173FBA5F290779EE3FDFE94"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UWPShopManagement.Views
{
    partial class V_ArduinoManagement_C : 
        global::Windows.UI.Xaml.Controls.UserControl, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedItem(global::Windows.UI.Xaml.Controls.Primitives.Selector obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.SelectedItem = value;
            }
            public static void Set_Microsoft_Xaml_Interactions_Core_InvokeCommandAction_Command(global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction obj, global::System.Windows.Input.ICommand value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Windows.Input.ICommand) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Windows.Input.ICommand), targetNullValue);
                }
                obj.Command = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        private class V_ArduinoManagement_C_obj2_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IV_ArduinoManagement_C_Bindings
        {
            private global::UWPShopManagement.Models.M_WeightSensor dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj3;
            private global::Windows.UI.Xaml.Controls.TextBlock obj4;
            private global::Windows.UI.Xaml.Controls.TextBlock obj5;

            private V_ArduinoManagement_C_obj2_BindingsTracking bindingsTracking;

            public V_ArduinoManagement_C_obj2_Bindings()
            {
                this.bindingsTracking = new V_ArduinoManagement_C_obj2_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 3: // Views\V_ArduinoManagement_C.xaml line 26
                        this.obj3 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 4: // Views\V_ArduinoManagement_C.xaml line 31
                        this.obj4 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 5: // Views\V_ArduinoManagement_C.xaml line 36
                        this.obj5 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                switch(args.Phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(args.Item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            ((global::Windows.UI.Xaml.Controls.Grid)args.ItemContainer.ContentTemplateRoot).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::UWPShopManagement.Models.M_WeightSensor) args.Item, 1 << (int)args.Phase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                this.bindingsTracking.ReleaseAllListeners();
            }

            // IV_ArduinoManagement_C_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::UWPShopManagement.Models.M_WeightSensor)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::UWPShopManagement.Models.M_WeightSensor obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_PIN_DT(obj.PIN_DT, phase);
                        this.Update_Reading(obj.Reading, phase);
                        this.Update_Delta(obj.Delta, phase);
                    }
                }
            }
            private void Update_PIN_DT(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\V_ArduinoManagement_C.xaml line 26
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj3, obj.ToString(), null);
                }
            }
            private void Update_Reading(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\V_ArduinoManagement_C.xaml line 31
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj4, (global::System.String)this.LookupConverter("IntToGarmConverter").Convert(obj, typeof(global::System.String), null, null), null);
                }
            }
            private void Update_Delta(global::UWPShopManagement.Models.M_SensorDelta obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_Delta(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\V_ArduinoManagement_C.xaml line 36
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj5, obj != null ? obj.ToString() : null, null);
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
            private class V_ArduinoManagement_C_obj2_BindingsTracking
            {
                private global::System.WeakReference<V_ArduinoManagement_C_obj2_Bindings> weakRefToBindingObj; 

                public V_ArduinoManagement_C_obj2_BindingsTracking(V_ArduinoManagement_C_obj2_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<V_ArduinoManagement_C_obj2_Bindings>(obj);
                }

                public V_ArduinoManagement_C_obj2_Bindings TryGetBindingObject()
                {
                    V_ArduinoManagement_C_obj2_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_Delta(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    V_ArduinoManagement_C_obj2_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::UWPShopManagement.Models.M_WeightSensor obj = sender as global::UWPShopManagement.Models.M_WeightSensor;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_PIN_DT(obj.PIN_DT, DATA_CHANGED);
                                bindings.Update_Reading(obj.Reading, DATA_CHANGED);
                                bindings.Update_Delta(obj.Delta, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "PIN_DT":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_PIN_DT(obj.PIN_DT, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Reading":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Reading(obj.Reading, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Delta":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_Delta(obj.Delta, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::UWPShopManagement.Models.M_WeightSensor obj)
                {
                    V_ArduinoManagement_C_obj2_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
                public void PropertyChanged_Delta(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    V_ArduinoManagement_C_obj2_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::UWPShopManagement.Models.M_SensorDelta obj = sender as global::UWPShopManagement.Models.M_SensorDelta;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::UWPShopManagement.Models.M_SensorDelta cache_Delta = null;
                public void UpdateChildListeners_Delta(global::UWPShopManagement.Models.M_SensorDelta obj)
                {
                    if (obj != cache_Delta)
                    {
                        if (cache_Delta != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_Delta).PropertyChanged -= PropertyChanged_Delta;
                            cache_Delta = null;
                        }
                        if (obj != null)
                        {
                            cache_Delta = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_Delta;
                        }
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        private class V_ArduinoManagement_C_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            IV_ArduinoManagement_C_Bindings
        {
            private global::UWPShopManagement.Views.V_ArduinoManagement_C dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.TextBlock obj7;
            private global::Windows.UI.Xaml.Controls.ListView obj8;
            private global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction obj9;
            private global::Windows.UI.Xaml.Controls.TextBlock obj10;
            private global::Windows.UI.Xaml.Controls.TextBlock obj11;
            private global::Windows.UI.Xaml.Controls.TextBlock obj12;
            private global::Windows.UI.Xaml.Controls.TextBlock obj13;

            private V_ArduinoManagement_C_obj1_BindingsTracking bindingsTracking;

            public V_ArduinoManagement_C_obj1_Bindings()
            {
                this.bindingsTracking = new V_ArduinoManagement_C_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 7: // Views\V_ArduinoManagement_C.xaml line 65
                        this.obj7 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 8: // Views\V_ArduinoManagement_C.xaml line 136
                        this.obj8 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 9: // Views\V_ArduinoManagement_C.xaml line 145
                        this.obj9 = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)target;
                        break;
                    case 10: // Views\V_ArduinoManagement_C.xaml line 100
                        this.obj10 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 11: // Views\V_ArduinoManagement_C.xaml line 92
                        this.obj11 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 12: // Views\V_ArduinoManagement_C.xaml line 83
                        this.obj12 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 13: // Views\V_ArduinoManagement_C.xaml line 74
                        this.obj13 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            // IV_ArduinoManagement_C_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::UWPShopManagement.Views.V_ArduinoManagement_C)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::UWPShopManagement.Views.V_ArduinoManagement_C obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_MasterMenuItem(obj.MasterMenuItem, phase);
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_MasterMenuItem(global::UWPShopManagement.Services.S_ArduinoLink obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_MasterMenuItem(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_MasterMenuItem_Arduino(obj.Arduino, phase);
                    }
                }
            }
            private void Update_MasterMenuItem_Arduino(global::UWPShopManagement.Models.M_ArduinoMarkA obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_MasterMenuItem_Arduino(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_MasterMenuItem_Arduino_Name(obj.Name, phase);
                        this.Update_MasterMenuItem_Arduino_IsConnect(obj.IsConnect, phase);
                        this.Update_MasterMenuItem_Arduino_Mills(obj.Mills, phase);
                        this.Update_MasterMenuItem_Arduino_Mode(obj.Mode, phase);
                        this.Update_MasterMenuItem_Arduino_ID(obj.ID, phase);
                    }
                }
            }
            private void Update_MasterMenuItem_Arduino_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\V_ArduinoManagement_C.xaml line 65
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj7, obj, null);
                }
            }
            private void Update_ViewModel(global::UWPShopManagement.ViewModels.VM_ArduinoManagement obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SensorItems(obj.SensorItems, phase);
                        this.Update_ViewModel_SelectedSensor(obj.SelectedSensor, phase);
                    }
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SensorItemClickCommand(obj.SensorItemClickCommand, phase);
                    }
                }
            }
            private void Update_ViewModel_SensorItems(global::System.Collections.ObjectModel.ObservableCollection<global::UWPShopManagement.Models.M_WeightSensor> obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_SensorItems(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\V_ArduinoManagement_C.xaml line 136
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj8, obj, null);
                }
            }
            private void Update_ViewModel_SelectedSensor(global::UWPShopManagement.Models.M_WeightSensor obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_ViewModel_SelectedSensor(obj);
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\V_ArduinoManagement_C.xaml line 136
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_Selector_SelectedItem(this.obj8, obj, null);
                }
            }
            private void Update_ViewModel_SensorItemClickCommand(global::System.Windows.Input.ICommand obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\V_ArduinoManagement_C.xaml line 145
                    XamlBindingSetters.Set_Microsoft_Xaml_Interactions_Core_InvokeCommandAction_Command(this.obj9, obj, null);
                }
            }
            private void Update_MasterMenuItem_Arduino_IsConnect(global::System.Boolean obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\V_ArduinoManagement_C.xaml line 100
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj10, obj.ToString(), null);
                }
            }
            private void Update_MasterMenuItem_Arduino_Mills(global::System.TimeSpan obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\V_ArduinoManagement_C.xaml line 92
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj11, obj.ToString(), null);
                }
            }
            private void Update_MasterMenuItem_Arduino_Mode(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\V_ArduinoManagement_C.xaml line 83
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj12, obj.ToString(), null);
                }
            }
            private void Update_MasterMenuItem_Arduino_ID(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Views\V_ArduinoManagement_C.xaml line 74
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj13, obj, null);
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
            private class V_ArduinoManagement_C_obj1_BindingsTracking
            {
                private global::System.WeakReference<V_ArduinoManagement_C_obj1_Bindings> weakRefToBindingObj; 

                public V_ArduinoManagement_C_obj1_BindingsTracking(V_ArduinoManagement_C_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<V_ArduinoManagement_C_obj1_Bindings>(obj);
                }

                public V_ArduinoManagement_C_obj1_Bindings TryGetBindingObject()
                {
                    V_ArduinoManagement_C_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                    UpdateChildListeners_MasterMenuItem(null);
                    UpdateChildListeners_MasterMenuItem_Arduino(null);
                    UpdateChildListeners_ViewModel(null);
                    UpdateChildListeners_ViewModel_SensorItems(null);
                    UpdateChildListeners_ViewModel_SelectedSensor(null);
                }

                public void DependencyPropertyChanged_MasterMenuItem(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    V_ArduinoManagement_C_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::UWPShopManagement.Views.V_ArduinoManagement_C obj = sender as global::UWPShopManagement.Views.V_ArduinoManagement_C;
                        if (obj != null)
                        {
                            bindings.Update_MasterMenuItem(obj.MasterMenuItem, DATA_CHANGED);
                        }
                    }
                }
                private long tokenDPC_MasterMenuItem = 0;
                public void UpdateChildListeners_(global::UWPShopManagement.Views.V_ArduinoManagement_C obj)
                {
                    V_ArduinoManagement_C_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        if (bindings.dataRoot != null)
                        {
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::UWPShopManagement.Views.V_ArduinoManagement_C.MasterMenuItemProperty, tokenDPC_MasterMenuItem);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            tokenDPC_MasterMenuItem = obj.RegisterPropertyChangedCallback(global::UWPShopManagement.Views.V_ArduinoManagement_C.MasterMenuItemProperty, DependencyPropertyChanged_MasterMenuItem);
                        }
                    }
                }
                public void PropertyChanged_MasterMenuItem(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    V_ArduinoManagement_C_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::UWPShopManagement.Services.S_ArduinoLink obj = sender as global::UWPShopManagement.Services.S_ArduinoLink;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_MasterMenuItem_Arduino(obj.Arduino, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Arduino":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_MasterMenuItem_Arduino(obj.Arduino, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::UWPShopManagement.Services.S_ArduinoLink cache_MasterMenuItem = null;
                public void UpdateChildListeners_MasterMenuItem(global::UWPShopManagement.Services.S_ArduinoLink obj)
                {
                    if (obj != cache_MasterMenuItem)
                    {
                        if (cache_MasterMenuItem != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_MasterMenuItem).PropertyChanged -= PropertyChanged_MasterMenuItem;
                            cache_MasterMenuItem = null;
                        }
                        if (obj != null)
                        {
                            cache_MasterMenuItem = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_MasterMenuItem;
                        }
                    }
                }
                public void PropertyChanged_MasterMenuItem_Arduino(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    V_ArduinoManagement_C_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::UWPShopManagement.Models.M_ArduinoMarkA obj = sender as global::UWPShopManagement.Models.M_ArduinoMarkA;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_MasterMenuItem_Arduino_Name(obj.Name, DATA_CHANGED);
                                bindings.Update_MasterMenuItem_Arduino_IsConnect(obj.IsConnect, DATA_CHANGED);
                                bindings.Update_MasterMenuItem_Arduino_Mills(obj.Mills, DATA_CHANGED);
                                bindings.Update_MasterMenuItem_Arduino_Mode(obj.Mode, DATA_CHANGED);
                                bindings.Update_MasterMenuItem_Arduino_ID(obj.ID, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "Name":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_MasterMenuItem_Arduino_Name(obj.Name, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "IsConnect":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_MasterMenuItem_Arduino_IsConnect(obj.IsConnect, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Mills":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_MasterMenuItem_Arduino_Mills(obj.Mills, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "Mode":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_MasterMenuItem_Arduino_Mode(obj.Mode, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "ID":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_MasterMenuItem_Arduino_ID(obj.ID, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::UWPShopManagement.Models.M_ArduinoMarkA cache_MasterMenuItem_Arduino = null;
                public void UpdateChildListeners_MasterMenuItem_Arduino(global::UWPShopManagement.Models.M_ArduinoMarkA obj)
                {
                    if (obj != cache_MasterMenuItem_Arduino)
                    {
                        if (cache_MasterMenuItem_Arduino != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_MasterMenuItem_Arduino).PropertyChanged -= PropertyChanged_MasterMenuItem_Arduino;
                            cache_MasterMenuItem_Arduino = null;
                        }
                        if (obj != null)
                        {
                            cache_MasterMenuItem_Arduino = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_MasterMenuItem_Arduino;
                        }
                    }
                }
                public void PropertyChanged_ViewModel(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    V_ArduinoManagement_C_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::UWPShopManagement.ViewModels.VM_ArduinoManagement obj = sender as global::UWPShopManagement.ViewModels.VM_ArduinoManagement;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_ViewModel_SensorItems(obj.SensorItems, DATA_CHANGED);
                                bindings.Update_ViewModel_SelectedSensor(obj.SelectedSensor, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "SensorItems":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SensorItems(obj.SensorItems, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "SelectedSensor":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_ViewModel_SelectedSensor(obj.SelectedSensor, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::UWPShopManagement.ViewModels.VM_ArduinoManagement cache_ViewModel = null;
                public void UpdateChildListeners_ViewModel(global::UWPShopManagement.ViewModels.VM_ArduinoManagement obj)
                {
                    if (obj != cache_ViewModel)
                    {
                        if (cache_ViewModel != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel).PropertyChanged -= PropertyChanged_ViewModel;
                            cache_ViewModel = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_SensorItems(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    V_ArduinoManagement_C_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::UWPShopManagement.Models.M_WeightSensor> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::UWPShopManagement.Models.M_WeightSensor>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_ViewModel_SensorItems(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    V_ArduinoManagement_C_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::UWPShopManagement.Models.M_WeightSensor> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::UWPShopManagement.Models.M_WeightSensor>;
                    }
                }
                private global::System.Collections.ObjectModel.ObservableCollection<global::UWPShopManagement.Models.M_WeightSensor> cache_ViewModel_SensorItems = null;
                public void UpdateChildListeners_ViewModel_SensorItems(global::System.Collections.ObjectModel.ObservableCollection<global::UWPShopManagement.Models.M_WeightSensor> obj)
                {
                    if (obj != cache_ViewModel_SensorItems)
                    {
                        if (cache_ViewModel_SensorItems != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_SensorItems).PropertyChanged -= PropertyChanged_ViewModel_SensorItems;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)cache_ViewModel_SensorItems).CollectionChanged -= CollectionChanged_ViewModel_SensorItems;
                            cache_ViewModel_SensorItems = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_SensorItems = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_SensorItems;
                            ((global::System.Collections.Specialized.INotifyCollectionChanged)obj).CollectionChanged += CollectionChanged_ViewModel_SensorItems;
                        }
                    }
                }
                public void PropertyChanged_ViewModel_SelectedSensor(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    V_ArduinoManagement_C_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::UWPShopManagement.Models.M_WeightSensor obj = sender as global::UWPShopManagement.Models.M_WeightSensor;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::UWPShopManagement.Models.M_WeightSensor cache_ViewModel_SelectedSensor = null;
                public void UpdateChildListeners_ViewModel_SelectedSensor(global::UWPShopManagement.Models.M_WeightSensor obj)
                {
                    if (obj != cache_ViewModel_SelectedSensor)
                    {
                        if (cache_ViewModel_SelectedSensor != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_ViewModel_SelectedSensor).PropertyChanged -= PropertyChanged_ViewModel_SelectedSensor;
                            cache_ViewModel_SelectedSensor = null;
                        }
                        if (obj != null)
                        {
                            cache_ViewModel_SelectedSensor = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_ViewModel_SelectedSensor;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1: // Views\V_ArduinoManagement_C.xaml line 1
                {
                    this.userControl = (global::Windows.UI.Xaml.Controls.UserControl)(target);
                }
                break;
            case 6: // Views\V_ArduinoManagement_C.xaml line 51
                {
                    this.grid = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 7: // Views\V_ArduinoManagement_C.xaml line 65
                {
                    this.TitlePage = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 8: // Views\V_ArduinoManagement_C.xaml line 136
                {
                    this.SensorsListView = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 14: // Views\V_ArduinoManagement_C.xaml line 154
                {
                    this.WindowStates = (global::Windows.UI.Xaml.VisualStateGroup)(target);
                }
                break;
            case 15: // Views\V_ArduinoManagement_C.xaml line 155
                {
                    this.WideState = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            case 16: // Views\V_ArduinoManagement_C.xaml line 160
                {
                    this.NarrowState = (global::Windows.UI.Xaml.VisualState)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\V_ArduinoManagement_C.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.UserControl element1 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    V_ArduinoManagement_C_obj1_Bindings bindings = new V_ArduinoManagement_C_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            case 2: // Views\V_ArduinoManagement_C.xaml line 17
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element2 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    V_ArduinoManagement_C_obj2_Bindings bindings = new V_ArduinoManagement_C_obj2_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element2.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element2.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element2, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

